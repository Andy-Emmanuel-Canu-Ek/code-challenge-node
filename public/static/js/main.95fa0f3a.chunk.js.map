{"version":3,"sources":["helpers/handleMessages.tsx","hooks/useForm.tsx","types/types.tsx","services/fetch.tsx","services/authService.tsx","actions/authActions.tsx","components/auth/LoginScreen.tsx","components/auth/RegisterScreen.tsx","components/auth/MainLoginScreen.tsx","components/ui/NavbarScreen.tsx","components/user/ItemListScreen.tsx","components/user/ListUserScreen.tsx","components/user/UserScreen.tsx","services/eventService.tsx","helpers/formatEventList.tsx","components/calendar/CalendarModal.tsx","components/calendar/CalendarEvent.tsx","helpers/calendar_config.tsx","components/calendar/CalendarScreen.tsx","routes/MainRouter.tsx","routes/PublicRouter.tsx","routes/PrivateRouter.tsx","routes/AppRouter.tsx","reducers/authReducer.tsx","reducers/rootReducer.tsx","store/store.tsx","App.tsx","index.tsx"],"names":["handleMessage","data","Swal","fire","msg","handleMessageError","msg_error","console","log","errors","Object","keys","map","item","reduce","currentText","nextText","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","baseUrl","fetchWitoutToken","endpoint","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","login","a","resp","json","ok","setItem","user_id","register","getUserList","deleteUserId","id","logout","dispatch","clear","type","LoginScreen","history","useHistory","useDispatch","lEmail","lPassword","formValuesLogin","handleLogin","handleLoginSubmit","e","preventDefault","validateForm","isValid","formData","user","payload","replace","email","password","validator","isEmail","className","onSubmit","placeholder","onChange","RegisterScreen","rName","rEmail","rPassword","rPasswordConfirm","formValuesRegister","handleRegister","handleRegisterSubmit","passwordConfirm","isEmpty","toString","trim","equals","MainLoginScreen","NavbarScreen","href","onClick","push","ItemListScreen","handleDelete","useSelector","state","auth","_id","index","scope","ListUserScreen","userList","setuserLis","useEffect","getUserItems","user_list","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","deleteUser","idx","UserScreen","saveEvent","deleteEvent","getEventList","formatEventList","event_list","desc","start","moment","start_date","toDate","end","end_date","bgcolor","customStyles","content","top","left","right","bottom","transformValues","Modal","setAppElement","minutes","seconds","add","clone","CalendarModal","isOpen","setisOpen","evt","setEventList","formValues","setFormValues","handleSubmit","isFormValid","deleteEventMethod","isSameOrAfter","onRequestClose","style","closeTimeoutMS","contentLabel","overlayClassName","minDate","autoComplete","rows","CalendarEvent","event","format","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","locale","localizer","momentLocalizer","CalendarScreen","eventList","evtModal","setEvtModal","getEventItems","selectable","events","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onSelectSlot","onDoubleClickEvent","startAccessor","endAccessor","MainRouter","exact","path","component","to","PublicRouter","isAuth","Component","rest","props","protoTypes","PropTypes","bool","isRequired","func","PrivateRouter","AppRouter","logged","rootReducer","combineReducers","action","composeEnhancers","window","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95fa0f3a.chunk.js","sourcesContent":["import Swal from 'sweetalert2'\nexport const handleMessage = (data) => {\n    Swal.fire('Exito', data.msg, 'success')\n}\n\nexport const handleMessageError = (data) => {\n    let msg_error;\n    console.log('errrr', data.errors);\n    if(!data.msg && data.errors){\n       msg_error = Object.keys(data.errors).map((item: any) => {\n           return data.errors[item].msg\n       })\n\n       msg_error = msg_error.reduce((currentText, nextText) => currentText + nextText, \"\")\n    }\n    Swal.fire('Ocurrio un error', data.msg || msg_error || \"Ha ocurrido un error al tratar de realizar la peticion. Por favor contactese con el administrador\", 'error')\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","export const types = {\n    login: \"[auth login]\",\n    logout: \"[auth logut]\",\n    authCheckingFinish: \"[auth checking_finish]\"\n}","const baseUrl = \"https://node-code-challenge.herokuapp.com/api\";\n\nexport const fetchWitoutToken = ( endpoint: string, data: {}, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    console.log('fetch to', url, 'with data ', data);\n    console.log('Method', method);\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nexport const fetchWithToken = ( endpoint: string, data: {}, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n","import { authLogout } from \"../actions/authActions\";\nimport { fetchWitoutToken, fetchWithToken } from \"./fetch\";\n\nexport const login = async (data) => {\n  const resp = await fetchWitoutToken(\"auth\", data, \"POST\");\n  const body = await resp.json();\n  if (body.ok) {\n    localStorage.setItem(\"token\", body.token);\n    localStorage.setItem(\"user_id\", body.user_id);\n  }\n  return body;\n};\n\nexport const register = async (data) => {\n  const resp = await fetchWitoutToken(\"auth/new\", data, \"POST\");\n  const body = await resp.json();\n  return body;\n};\n\nexport const getUserList = async () => {\n  const resp = await fetchWithToken(\"auth/user_list\", {}, \"GET\");\n  const body = await resp.json();\n  return body;\n};\n\nexport const deleteUserId = async (id) => {\n  const resp = await fetchWithToken(\"auth/\" + id, {}, \"DELETE\");\n  const body = await resp.json();\n  return body;\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(authLogout());\n  };\n};\n","import { types } from \"../types/types\";\n\nexport const authLogin = ( user ) => ({\n    type: types.login,\n    payload: user\n});\n\nexport const authLogout = () => ({ type: types.logout })\n","import Swal from 'sweetalert2'\nimport validator from 'validator'\nimport \"../../css/loginStyles.css\";\nimport {\n  handleMessage,\n  handleMessageError,\n} from \"../../helpers/handleMessages\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { useHistory } from \"react-router-dom\";\nimport { login } from \"../../services/authService\";\nimport { useDispatch } from 'react-redux';\nimport { authLogin } from '../../actions/authActions';\n\nexport const LoginScreen = () => {\n  const history = useHistory();\n  const dispatch = useDispatch()\n\n  const [formValuesLogin, handleInputChangeLogin] = useForm({\n    lEmail: \"\",\n    lPassword: \"\",\n  });\n\n  const handleLogin: any = handleInputChangeLogin;\n\n  const { lEmail, lPassword }: any = formValuesLogin;\n\n  const handleLoginSubmit = async (e: any) => {\n    e.preventDefault();\n    const {isValid, formData} = validateForm();\n    \n    if(!isValid){\n      return\n    }\n\n    const data = await login(formData);\n    if (data.ok) {\n      handleMessage(data);\n      dispatch(authLogin({ user_id: data.user_id}))\n      history.replace(\"/\");\n    } else {\n      handleMessageError(data);\n    }\n  };\n\n  const validateForm = () => {\n    let isValid = true;\n\n    const { lEmail: email, lPassword: password }: any = formValuesLogin;\n\n    if(!validator.isEmail(email)){\n      Swal.fire('Advertencia', \"El email no es válido\", \"warning\");\n      isValid = false;\n    }\n\n    const formData: Object = {email, password};\n    return { isValid, formData}\n  }\n\n\n  return (\n    <div className=\"col-md-5 login-form-1\">\n      <h3>Ingreso</h3>\n      <form onSubmit={handleLoginSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Correo\"\n            name=\"lEmail\"\n            value={lEmail}\n            onChange={handleLogin}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Contraseña\"\n            name=\"lPassword\"\n            value={lPassword}\n            onChange={handleLogin}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n","import validator from 'validator'\nimport { useForm } from \"../../hooks/useForm\";\nimport { register } from \"../../services/authService\";\nimport {\n  handleMessage,\n  handleMessageError,\n} from \"../../helpers/handleMessages\";\nimport Swal from 'sweetalert2';\n\nexport const RegisterScreen = () => {\n  const [formValuesRegister, handleInputChangeRegister] = useForm({\n    rName: \"\",\n    rEmail: \"\",\n    rPassword: \"\",\n    rPasswordConfirm: \"\",\n  });\n\n  const handleRegister: any = handleInputChangeRegister;\n\n  const {\n    rName,\n    rEmail,\n    rPassword,\n    rPasswordConfirm,\n  }: any = formValuesRegister;\n\n  const handleRegisterSubmit = async (e: any) => {\n    e.preventDefault();\n\n    const {isValid, formData} = validateForm();\n    \n    if(!isValid){\n      return\n    }\n\n    const data = await register(formData);\n\n    if (data.ok) {\n      handleMessage(data);\n    } else {\n      handleMessageError(data);\n    }\n  };\n\n  const validateForm = () => {\n    let isValid = true;\n\n    const {\n      rName: name,\n      rEmail: email,\n      rPassword: password,\n      rPasswordConfirm: passwordConfirm,\n    }: any = formValuesRegister;\n\n    if(validator.isEmpty(name.toString().trim())){\n      Swal.fire('Advertencia', \"Es necesario agregar un nombre\", \"warning\");\n      isValid = false;\n    }\n\n    if(isValid && !validator.isEmail(email)){\n      Swal.fire('Advertencia', \"El email no es válido\", \"warning\");\n      isValid = false;\n    }\n\n    if(isValid && !validator.equals(password, passwordConfirm)){\n      Swal.fire('Advertencia', \"Las contraseñas no coinciden\", \"warning\");\n      isValid = false;\n    }\n\n    const formData: Object = {name, email, password};\n    return { isValid, formData}\n  }\n\n  return (\n    <div className=\"col-md-5 login-form-2\">\n      <h3>Registro</h3>\n      <form onSubmit={handleRegisterSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Nombre\"\n            name=\"rName\"\n            value={rName}\n            onChange={handleRegister}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"Correo\"\n            name=\"rEmail\"\n            value={rEmail}\n            onChange={handleRegister}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Contraseña\"\n            name=\"rPassword\"\n            value={rPassword}\n            onChange={handleRegister}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Repita la contraseña\"\n            name=\"rPasswordConfirm\"\n            value={rPasswordConfirm}\n            onChange={handleRegister}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { LoginScreen } from \"./LoginScreen\";\nimport { RegisterScreen } from \"./RegisterScreen\";\n\nexport const MainLoginScreen = () => {\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <LoginScreen />\n        <div className=\"col-md-2\"></div>\n        <RegisterScreen />\n      </div>\n    </div>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { logout } from \"../../services/authService\";\n\n\nexport const NavbarScreen = () => {\n  const dispatch = useDispatch()\n  const history = useHistory();\n\n  const handleLogout = () => {\n    dispatch(logout())\n    history.replace(\"/login\")\n  }\n\n  const handleUser = () => {\n    history.push(\"/usuario\")\n  }\n\n  const handleAgenda = () => {\n    history.push(\"/agenda\")\n\n  }\n  return (\n    <div className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Code challenge\n      </a>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" onClick={handleUser}>\n              Usuarios\n            </a>\n          </li>\n          <li className=\"nav-item active\">\n            <a className=\"nav-link\" onClick={handleAgenda}>\n              Agenda\n            </a>\n          </li>\n        </ul>\n      </div>\n\n      <span className=\"btn btn-outline-info\" onClick={handleLogout}>\n        <span>Salir</span>\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nexport const ItemListScreen = ({ item, handleDelete }) => {\n  const { user_id } = useSelector((state: any) => state.auth);\n\n  const { _id, index, name, email } = item;\n\n  return (\n    <>\n      <tr>\n        <th scope=\"row\">{index}</th>\n        <td>{name}</td>\n        <td>{email}</td>\n        <td>**********</td>\n        <td>\n        {user_id !== _id.toString() && (\n          \n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              onClick={() => handleDelete(item)}\n            >\n              Eliminar\n            </button>\n        )}\n        </td>\n      </tr>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getUserList, deleteUserId } from \"../../services/authService\";\nimport { ItemListScreen } from \"./ItemListScreen\";\nimport Swal from \"sweetalert2\";\nimport {\n  handleMessage,\n  handleMessageError,\n} from \"../../helpers/handleMessages\";\n\nexport const ListUserScreen = () => {\n  const [userList, setuserLis] = useState([]);\n\n  useEffect(() => {\n    getUserItems();\n  }, []);\n\n  const getUserItems = async () => {\n    const data = await getUserList();\n    if (data.ok) {\n      setuserLis(data.user_list);\n    } else {\n      handleMessageError(data);\n    }\n  };\n\n  const handleDelete: any = (item: Object) => {\n    Swal.fire({\n      title: \"Eliminar usuario\",\n      text: \"¿Seguro que desea eliminar este usuario?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Sí, eliminar!\",\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      const { _id: user_id }: any = item;\n      if (result.isConfirmed) {\n        console.log(user_id);\n        deleteUser(user_id);\n      }\n    });\n  };\n\n  const deleteUser = async (id) => {\n    const data = await deleteUserId(id);\n    if (data.ok) {\n      handleMessage(data);\n      getUserItems();\n    } else {\n      handleMessageError(data);\n    }\n  };\n\n  return (\n    <div>\n      <table className=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Correo</th>\n            <th scope=\"col\">Pass</th>\n            <th scope=\"col\">Opciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userList.map((item: Object, idx) => (\n            <ItemListScreen\n              key={idx}\n              item={{ index: idx + 1, ...item }}\n              handleDelete={handleDelete}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ListUserScreen } from \"./ListUserScreen\";\n\nexport const UserScreen = () => {\n  return (\n    <div>\n      <div className=\"card\">\n        <div className=\"card-body\">\n            <ListUserScreen />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { fetchWithToken } from \"./fetch\";\n\nexport const saveEvent = async (data) => {\n  let resp;\n  if(data.id !== 0){\n    resp = await fetchWithToken(\"events/\" + data.id, data, \"PUT\");\n  }else{\n    resp = await fetchWithToken(\"events\", data, \"POST\");\n  }\n\n  const body = await resp.json();\n  return body;\n};\n\nexport const deleteEvent = async (id) => {\n  const resp = await fetchWithToken(\"events/\" + id, {}, \"DELETE\");\n  const body = await resp.json();\n  return body;\n};\n\n\nexport const getEventList = async () => {\n  const resp = await fetchWithToken(\"events\", {}, \"GET\");\n  const body = await resp.json();\n  return body;\n};\n","import moment from \"moment\";\n\nexport const formatEventList = (event_list) => {\n  const format_events = event_list.map((item) => ({\n    id: item.id,\n    title: item.title,\n    desc: item.desc,\n    start: moment(item.start_date).toDate(),\n    end: moment(item.end_date).toDate(),\n    bgcolor: \"#fafafa\",\n  }));\n  return format_events;\n};\n","import moment from \"moment\";\nimport validator from 'validator'\nimport Swal from \"sweetalert2\";\nimport Modal from \"react-modal\";\nimport { useEffect, useState } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { saveEvent, deleteEvent} from \"../../services/eventService\";\nimport { handleMessage, handleMessageError } from \"../../helpers/handleMessages\";\nimport { formatEventList } from \"../../helpers/formatEventList\";\n\nconst customStyles = {\n  content: {\n    top: \"auto\",\n    left: \"auto\",\n    right: \"auto\",\n    bottom: \"auto\",\n    transformValues: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\n\nconst start_date = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst end_date = start_date.clone().add(1, \"hours\");\n\nconst initialState = {\n  id: 0,\n  title: \"\",\n  desc: \"\",\n  start: start_date.toDate(),\n  end: end_date.toDate(),\n}\n\nexport const CalendarModal = ({ isOpen, setisOpen, evt, setEventList}) => {\n  \n  const [formValues, setFormValues] = useState(initialState);\n\n  useEffect(() => {\n    setFormValues({\n      id: evt.id ? evt.id :  0,\n      title: evt.title ? evt.title : \"\",\n      desc: evt.desc ? evt.desc : \"\",\n      start: evt.start ? moment(evt.start).toDate() : start_date.toDate(),\n      end: evt.end ? moment(evt.end).toDate() : end_date.toDate(),\n    })\n  }, [evt]);\n\n  const { id, title, desc, start, end } = formValues;\n\n  const handleSubmit = async(e: any) => {\n    e.preventDefault();\n\n    const { isValid, formData } = isFormValid();\n    \n    if(!isValid){\n      return\n    }\n\n    const data = await saveEvent(formData);\n    if(data.ok){\n      handleMessage(data);\n      setEventList(formatEventList(data.event_list))\n      setisOpen(false);\n    }else{\n      handleMessageError(data);\n    }\n  };\n\n  const handleDelete = async () =>{\n    Swal.fire({\n      title: \"Eliminar evento\",\n      text: \"¿Seguro que desea eliminar este evento?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Sí, eliminar!\",\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        deleteEventMethod();\n      }\n    });\n  }\n\n  const deleteEventMethod = async () =>{\n    const { id } = formValues;\n    const data = await deleteEvent(id);\n    if(data.ok){\n      handleMessage(data);\n      setEventList(formatEventList(data.event_list))\n      setisOpen(false);\n    }else{\n      handleMessageError(data);\n    }\n  }\n\n  const onCloseModal = () => {\n    setisOpen(false);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const onChangeStartDatePicker = (evt: any) => {\n    setFormValues({\n      ...formValues,\n      start: evt,\n    });\n  };\n\n  const onChangeEndDatePicker = (evt: any) => {\n    setFormValues({\n      ...formValues,\n      end: evt,\n    });\n  };\n\n  const isFormValid = () => {\n    let isValid = true;\n    const {id, title, desc, start, end } = formValues;\n\n    if (moment(start).isSameOrAfter(moment(end))) {\n      console.log('object');\n      Swal.fire(\n        \"Error\",\n        \"La fecha final debe ser mayor a la fecha inicial\",\n        \"warning\"\n      );\n      isValid = false;\n    }\n\n    if (isValid && validator.isEmpty(title)) {\n      Swal.fire(\"Error\", \"Debe agregar un titulo\", \"warning\");\n      isValid = false;\n    }\n\n    const formData = { id, title, desc, start_date: start, end_date: end };\n    return { isValid, formData };\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={isOpen}\n        // onAfterOpen={afterOpenModal}\n        onRequestClose={onCloseModal}\n        style={customStyles}\n        closeTimeoutMS={300}\n        contentLabel=\"Example Modal\"\n        className=\"modal\"\n        overlayClassName=\"modal-fondo\"\n      >\n        <h1> Guardar evento </h1>\n        <hr />\n        <form className=\"container\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Fecha y hora inicio</label>\n            <DateTimePicker\n              className=\"form-control\"\n              placeholder=\"Fecha inicio\"\n              onChange={onChangeStartDatePicker}\n              value={start}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Fecha y hora fin</label>\n            <DateTimePicker\n              className=\"form-control\"\n              placeholder=\"Fecha fin\"\n              onChange={onChangeEndDatePicker}\n              value={end}\n              minDate={start}\n            />\n          </div>\n\n          <hr />\n          <div className=\"form-group\">\n            <label>Titulo</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Título del evento\"\n              name=\"title\"\n              autoComplete=\"off\"\n              onChange={handleInputChange}\n              value={title}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Una descripción corta\n            </small>\n          </div>\n\n          <div className=\"form-group\">\n            <textarea\n              onChange={handleInputChange}\n              className=\"form-control\"\n              placeholder=\"Descripción\"\n              rows={5}\n              value={desc}\n              name=\"desc\"\n            ></textarea>\n\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              Información adicional\n            </small>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n            <i className=\"far fa-save\"></i>\n            <span> Guardar</span>\n          </button>\n          <span> </span>\n          {\n            id !== 0 \n            && \n            <span  onClick={handleDelete} className=\"btn btn-outline-danger btn-block\">\n            <i className=\"far fa-save\"></i>\n            <span> Eliminar</span>\n          </span>\n          }\n        </form>\n      </Modal>\n    </div>\n  );\n};\n","import moment from 'moment';\n\nexport const CalendarEvent = (event: any) => {\n    const { start, end, desc } = event.event;\n    return (\n        <div>\n            <h6>{event.title}</h6>\n            <p>Descripción: {desc}</p>\n            <label> Inicia: {moment(start).format('hh:mm A')} - Termina: {moment(end).format('hh:mm A')}</label>\n        </div>\n    )\n}\n","import { Messages } from \"react-big-calendar\";\n\nexport const messages: Messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango'\n};","import \"moment/locale/es\";\nimport moment from \"moment\";\nimport {\n  Calendar,\n  momentLocalizer,\n  Event,\n  stringOrDate,\n} from \"react-big-calendar\";\nimport { useEffect, useState } from \"react\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { messages } from \"../../helpers/calendar_config\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { getEventList } from \"../../services/eventService\";\nimport { handleMessageError } from \"../../helpers/handleMessages\";\nimport { formatEventList } from \"../../helpers/formatEventList\";\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const [isOpen, setisOpen] = useState(false);\n\n  const [eventList, setEventList] = useState([]);\n  const [evtModal, setEvtModal] = useState({});\n\n  useEffect(() => {\n    getEventItems();\n  }, []);\n\n  const getEventItems = async () => {\n    const data = await getEventList();\n    if (data.ok) {\n      setEventList(formatEventList(data.event_list));\n    } else {\n      handleMessageError(data);\n    }\n  };\n\n  const handlePressEvent = (e) => {\n    setEvtModal(e);\n    setisOpen(true);\n  };\n\n  const handleDoubleClickEvent = (e) => {\n    setEvtModal(e);\n    setisOpen(true);\n  };\n\n  const eventStyleGetter: any = (\n    event: Event,\n    start: stringOrDate,\n    end: stringOrDate,\n    isSelected: Boolean\n  ) => {\n    const style = {\n      backgroundColor: \"#367CF7\",\n      borderRadius: \"0px\",\n      opacity: 0.8,\n      display: \"block\",\n      color: \"white\",\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <Calendar\n            selectable={true}\n            localizer={localizer}\n            events={eventList}\n            messages={messages}\n            eventPropGetter={eventStyleGetter}\n            components={{\n              event: CalendarEvent,\n            }}\n            onSelectSlot={handlePressEvent}\n            onDoubleClickEvent={handleDoubleClickEvent}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n          />\n        </div>\n      </div>\n\n      <CalendarModal\n        isOpen={isOpen}\n        setisOpen={setisOpen}\n        evt={evtModal}\n        setEventList={setEventList}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { NavbarScreen } from \"../components/ui/NavbarScreen\";\n\nimport { UserScreen } from \"../components/user/UserScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\n\nexport const MainRouter = () => {\n  return (\n    <>\n      <NavbarScreen />\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <Switch>\n            <Route exact path=\"/usuario\" component={UserScreen} />\n            <Route exact path=\"/agenda\" component={CalendarScreen} />\n            <Route exact path=\"/\" component={UserScreen} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router\";\n\nexport const PublicRouter = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props): any =>\n        isAuth ? <Redirect to=\"/\" /> : <Component {...props} /> \n      }\n    />\n  );\n};\n\nPublicRouter.protoTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect, Route } from \"react-router\";\n\nexport const PrivateRouter = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props): any =>\n        isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRouter.protoTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import {\n  BrowserRouter as Router,\n  Switch\n} from \"react-router-dom\";\nimport { MainLoginScreen } from \"../components/auth/MainLoginScreen\";\nimport { MainRouter } from \"./MainRouter\";\nimport { PublicRouter } from \"./PublicRouter\";\nimport { PrivateRouter } from \"./PrivateRouter\";\nimport { useSelector } from \"react-redux\";\n\nexport const AppRouter = () => {\n\n  const {user_id} = useSelector((state: any) => state.auth)\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRouter  isAuth={!!user_id} path=\"/login\" component={MainLoginScreen} />\n          <PrivateRouter isAuth={!!user_id} path=\"/\" component={MainRouter} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  logged: true,\n  user_id: localStorage.getItem(\"user_id\"),\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        ...state,\n        ...action.payload,\n        logged: true,\n      };\n\n    case types.logout:\n      return {\n        logged: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\n\nexport const rootReducer = combineReducers({\n    auth: authReducer\n})\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { AppRouter } from \"./routes/AppRouter\";\nimport { store } from \"./store/store\";\nimport \"./style.css\";\n\nexport const App = () => {\n  return (\n    <div>\n      <Provider store={store}>\n        <AppRouter />\n      </Provider>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}